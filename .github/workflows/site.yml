name: Deploy Site

on:
  push:
    branches: [master]

jobs:
  site:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        otp:
          - 24.0
        elixir:
          - 1.12.1
        rust:
          - stable

    steps:
      - name: Install git-annnex
        run: |
          sudo apt-get update
          sudo apt-get install -y git-annex

      - uses: actions/checkout@v2

      - name: Git config for git-annex
        run: |
          git pull
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

      - name: Setup git-annex special remote
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          git annex enableremote backblaze

      - uses: actions/cache@v3
        id: cache
        with:
          path: ~/.annex-cache
          key: v1

      - name: Setup git-annex cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.annex-cache
          cd ~/.annex-cache && git init --bare . && git annex init && git config annex.hardlink true && git annex untrust here

      - name: Fetch files from git-annex cache or from special remote
        run: |
          git remote add cache ~/.annex-cache
          git config remote.cache.annex-speculate-present true
          git config remote.cache.annex-cost 10
          git config remote.cache.annex-pull false
          git config remote.cache.annex-push false
          git config remote.cache.fetch do-not-fetch-from-this-remote:
          git annex get --all

      - name: Update git-annex cache
        run: |
          git annex copy --to cache

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - uses: erlef/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      - name: Restore Cache
        uses: actions/cache@v2
        id: npm-cache
        with:
          path: |
            assets/node_modules
          key: npm-v3-${{ hashFiles('priv/site/assets/package-lock.json') }}

      - name: Restore Cache
        uses: actions/cache@v2
        id: mix-cache
        with:
          path: |
            deps
            _build
            _site
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-v3-${{ hashFiles('mix.lock') }}

      - run: mix deps.get

      - run: cd priv/site/assets && npm install

      - run: cd priv/site/assets && NODE_ENV=production npx tailwindcss -o ../global.css -i global.css --minify

      - run: MIX_ENV=prod mix compile

      - run: MIX_ENV=prod mix still.compile

      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_site
